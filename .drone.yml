---
.add_ssh: &add_ssh |
  mkdir ~/.ssh
  echo $SSH_KEY > ~/.ssh/id_rsa
  chmod 600 ~/.ssh/id_rsa
  ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

.doc_git: &doc_git |
  VERSION=$(git describe --abbrev=0 --tag | tr -d '\n')
  git clone $DOC_REPOSITORY_URL doc-git
  rm -rf doc-git/doc/
  mv doc/ doc-git/
  cd doc-git
  git add .
  git commit -m "Add doc $VERSION"
  git tag $VERSION
  git log
  git push
  git push origin --tags

.cache_elixir: 
  - &restore_cache_elixir
    image: minio/mc
    commands:
      - mc config host add s3 $ENDPOINT $ACCESS_KEY $SECRET_KEY
      - MD5=$(md5sum mix.lock | sed 's/[ ]*mix.lock//g')
      - |
        if mc ls s3/mspr-billing-api/dependancies | grep $MD5
          then
          mc cp s3/mspr-billing-api/dependancies/$VERSION-$MD5.tar.gz ./
          mkdir ./deps
          tar xvf ./$VERSION-$MD5.tar.gz -C ./
        fi
    environment:
      VERSION: v1
      ENDPOINT:
        from_secret: ENDPOINT_S3
      ACCESS_KEY: 
        from_secret: ACCESS_KEY_S3
      SECRET_KEY:
        from_secret: SECRET_KEY_S3

  - &setup_deps_elixir
    image: elixir
    commands:
      - mix local.hex --force
      - mix local.rebar --force
      - mix deps.get
      - mix deps.compile
    
  - &rebuild_cache_elixir
    image: minio/mc
    commands:
      - mc config host add s3 $ENDPOINT $ACCESS_KEY $SECRET_KEY
      - MD5=$(md5sum mix.lock | sed 's/[ ]*mix.lock//g')
      - tar cvf $VERSION-$MD5.tar.gz deps/
      - mc cp ./$VERSION-$MD5.tar.gz s3/mspr-billing-api/dependancies/
    environment:
      VERSION: v1
      ENDPOINT:
        from_secret: ENDPOINT_S3
      ACCESS_KEY: 
        from_secret: ACCESS_KEY_S3
      SECRET_KEY:
        from_secret: SECRET_KEY_S3

kind: pipeline
type: kubernetes
name: default

steps: 
- name: Semantical Versionning
  image: node:12
  commands:
    - npx -p @semantic-release/commit-analyzer -p @semantic-release/release-notes-generator -p @semantic-release/github -p @semantic-release/changelog -p @semantic-release/git -p semantic-release semantic-release
  environment:
    GITHUB_TOKEN:
      from_secret: github_token
  depends_on: 
    - Tests
  when:
    branch:
    - master
    event: push

- name: Restore cache
  <<: *restore_cache_elixir

- name: Setup dependancies
  <<: *setup_deps_elixir
  depends_on:
    - Restore cache 

- name: Rebuild cache
  <<: *rebuild_cache_elixir
  depends_on:
    - Setup dependancies

- name: Tests
  image: elixir
  commands:
    - git fetch --tags
    - mix local.hex --force
    - mix local.rebar --force
    - mix coveralls.post --token $COVERALLS_TOKEN --branch "$DRONE_BRANCH" --name "CI" --committer "$DRONE_COMMIT_AUTHOR" --sha "$DRONE_COMMIT_SHA" --message "$DRONE_COMMIT_MESSAGE"
  environment:
    MIX_ENV: test
    COVERALLS_TOKEN:
      from_secret: COVERALLS_TOKEN
  depends_on:
    - Rebuild cache

- name: Generate release
  image: elixir
  commands:
    - git fetch --tags
    - SECRET_KEY_BASE=$(elixir -e ":crypto.strong_rand_bytes(48) |> Base.encode64 |> IO.puts")
    - sed "s|SECRET+KEY+BASE|$SECRET_KEY_BASE|" config/prod.secret.exs.sample >config/prod.secret.exs
    - mix local.hex --force
    - mix local.rebar --force
    - MIX_ENV=prod mix release app --path=build
  depends_on:
    - Tests
  when:
    event: tag

- name: docker
  image: banzaicloud/drone-kaniko
  settings:
    email: louis.epsi.perdereau@gmail.com
    dockerfile: ./Dockerfile
    registry: docker.pkg.github.com
    repo: lperdereau/mspr-billing-api/billing-api
    username:
      from_secret: github_username
    password:
      from_secret: github_token
    tags:
      - ${DRONE_TAG}
      - latest
  depends_on: 
    - Generate release
  when:
    event: tag

- name: rollout
  image: pabloclsn/kubectl-docker:latest
  commands:
    - echo $KUBE_CONFIG > ~/.kube/config
    - kubectl rollout restart deployment/billing-deployment -n prod-mspr-ci
  environment:
    KUBE_CONFIG:
      from_secret: KUBE_CONFIG
  depends_on: [docker]
  when:
    event: tag

- name: Documentation
  image: elixir
  commands:
    - *add_ssh
    - git fetch --tags
    - mix local.hex --force
    - mix deps.get
    - ./docs.sh
    - *doc_git
  environment:
    DOC_REPOSITORY_URL:
      from_secret: DOC_REPOSITORY_URL
    SSH_KEY:
      from_secret: DOC_SSH_KEY
  depends_on:
    - rollout
  when:
    event: tag
    